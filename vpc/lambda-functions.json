{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "Creates the lambda function that enables cross stack resource utilization",
	"Parameters" : {
		"stackNameTag":{
			"Type": "String",
			"Description":"tag - stack name"
	  },
		"projectTag":{
			"Type": "String",
			"Description":"tag - project name"
		},
		"groupTag":{
			"Type": "String",
			"Description":"tag - group name"
		},
		"costCenterTag":{
			"Type": "String",
			"Description":"tag - cost center"
		},
		"environmentTag":{
			"Type": "String",
			"Description":"tag - environment"
		},
		"keepAliveTag":{
			"Type": "String",
			"Description":"tag - keep alive tag"
		},
		"ownerTag":{
			"Type": "String",
			"Description":"tag - product owner"
		},
		"iamRoleArnCrossStackLookup":{
	   	"Description" : "The iam role arn for the cross stack lookup.",
	  	"Type": "String"
	  },
		"functionNameCrossStackLookup":{
			"Description" : "The function name for the cross stack lookup.",
			"Type": "String"
		},
		"doNotCreate" : {
			"Description" : "If doNotCreateStack condition is present (\"Condition\" : \"doNotCreateStack\") in resource definition, then the resource is not created",
			"Default" : "true",
			"Type" : "String"
		}

	},
	"Mappings":{},
	"Conditions" : {
    "doNotCreateStack" : {"Fn::Equals" : [{"Ref" : "doNotCreate"}, "false"]}
  },
	"Resources" : {
		"crossStackLookup": {
		  "Type": "AWS::Lambda::Function",
		  "Properties": {
				"FunctionName" : {"Ref": "functionNameCrossStackLookup"},
				"Code": {
		      "ZipFile":  { "Fn::Join": ["\n", [
		        "var response = require('cfn-response');",
		        "exports.handler = function(event, context) {",
		        "    console.log('REQUEST RECEIVED:\\n', JSON.stringify(event));",
		        "    if (event.RequestType == 'Delete') {",
		        "        response.send(event, context, response.SUCCESS);",
		        "        return;",
		        "    }",
		        "    var stackName = event.ResourceProperties.StackName;",
		        "    var responseData = {};",
		        "    if (stackName) {",
		        "        var aws = require('aws-sdk');",
		        "        var cfn = new aws.CloudFormation();",
		        "        cfn.describeStacks({StackName: stackName}, function(err, data) {",
		        "            if (err) {",
		        "                responseData = {Error: 'DescribeStacks call failed'};",
		        "                console.log(responseData.Error + ':\\n', err);",
		        "                response.send(event, context, response.FAILED, responseData);",
		        "            }",
		        "            else {",
		        "                data.Stacks[0].Outputs.forEach(function(output) {",
		        "                    responseData[output.OutputKey] = output.OutputValue;",
		        "                });",
		        "                response.send(event, context, response.SUCCESS, responseData);",
		        "            }",
		        "        });",
		        "    } else {",
		        "        responseData = {Error: 'Stack name not specified'};",
		        "        console.log(responseData.Error);",
		        "        response.send(event, context, response.FAILED, responseData);",
		        "    }",
		        "};"
		      ]]}
		    },
		    "Handler": "index.handler",
		    "Runtime": "nodejs",
		    "Timeout": "30",
		    "Role": {"Ref": "iamRoleArnCrossStackLookup"}
		  }
		}
	},
	"Outputs" : {
		"lambdaArnCrossStackLookup":{
			"Description" : "The arn of the crossStackLookup lambda function",
      "Value" : { "Fn::GetAtt" : ["crossStackLookup", "Arn"] }
		}
	}
}
