{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "Creates all required route table and ACLs for the private subnet.",
	"Parameters" : {
		"tagStack":{
	    "Type": "String",
	    "Description":"tag - stack name"
	  },
	  "tagProject":{
	    "Type": "String",
	    "Description":"tag - project name"
	  },
	  "tagGroup":{
	    "Type": "String",
	    "Description":"tag - group name"
	  },
	  "tagCostCenter":{
	    "Type": "String",
	    "Description":"tag - cost center"
	  },
		"tagEnvironment":{
	    "Type": "String",
	    "Description":"tag - environment"
	  },
	  "tagKeepAlive":{
	    "Type": "String",
	    "Description":"tag - keep alive tag"
	  },
	  "tagOwner":{
	    "Type": "String",
	    "Description":"tag - product owner"
	  },
		"vpcId":{
	    "Type":"AWS::EC2::VPC::Id",
	    "Description":"The ID of the VPC the subnets shall be provisioned in."
	  },
	  "privateSubnetId":{
	  	"Type":"AWS::EC2::Subnet::Id",
	  	"Description":"The ID of the private subnet B."
	  },
		"vpcCidr":{
	   	"Description" : "The CIDR block of the VPC.",
	  	"Type": "String"
	  },
	  "publicSubnetCidr":{
	   	"Description" : "The CIDR block of the public subnet.",
	  	"Type": "String"
	  },
		"privateSubnetCidr":{
	   	"Description" : "The CIDR block of the primary private subnet.",
	  	"Type": "String"
	  }
	},
	"Mappings":{},
	"Resources" : {
		"privateSubnetAcl" : {
    	"Type" : "AWS::EC2::NetworkAcl",
	  	"Properties" : {
		  	"Tags" : [{
		    	"Key":"stack",
		    	"Value": {"Ref": "tagStack"}
		    	},{
		    	"Key":"Name",
		    	"Value":{"Fn::Join":["-",[{"Ref": "tagStack"},"privateSubnetAcl"]]}
		      },{
					"Key":"project",
		    	"Value":{"Ref": "tagProject"}
					},{
					"Key":"group",
		    	"Value":{"Ref": "tagGroup"}
					},{
					"Key":"cost-center",
		    	"Value":{"Ref": "tagCostCenter"}
					},{
					"Key":"environment",
					"Value":{"Ref": "tagEnvironment"}
					},{
					"Key":"keep-alive",
					"Value":{"Ref": "tagKeepAlive"}
					},{
					"Key":"owner",
					"Value":{"Ref": "tagOwner"}
					}
				],
	    	"VpcId" : {"Ref" : "vpcId"}
	  	},
	    "Metadata":{
	    	"Comment" : "ACL for the private subnet. Allow bidirectional traffic from the public subnet."
	    }
	  },
		"privateSubnetAllowInboundSshFromPublicSubnet" : {
		  "Type" : "AWS::EC2::NetworkAclEntry",
		  "Properties" : {
		    "NetworkAclId" : { "Ref" : "privateSubnetAcl" },
		    "RuleNumber" : "100",
		    "Protocol" : "6",
		    "RuleAction" : "allow",
		    "Egress" : "false",
		    "CidrBlock" : {"Ref" : "publicSubnetCidr"},
		    "PortRange" : { "From" : "22", "To" : "22" }
		  },
		  "Metadata":{
		    "Comment" : "allow inbound ssh requests originating in the public subnet."
		  }
		},
		"privateSubnetAllowInboundResponsesFromInternet" : {
		  "Type" : "AWS::EC2::NetworkAclEntry",
		  "Properties" : {
		    "NetworkAclId" : { "Ref" : "privateSubnetAcl" },
		    "RuleNumber" : "110",
		    "Protocol" : "6",
		    "RuleAction" : "allow",
		    "Egress" : "false",
		    "CidrBlock" : "0.0.0.0/0",
		    "PortRange" : { "From" : "1024", "To" : "65535" }
		  },
		  "Metadata":{
		    "Comment" : "Used to allow for responses from internet (including S3)"
		  }
		},

		"privateSubnetAllowOutboundResponsesToPublicSubnet" : {
		  "Type" : "AWS::EC2::NetworkAclEntry",
		  "Properties" : {
		    "NetworkAclId" : { "Ref" : "privateSubnetAcl" },
		    "RuleNumber" : "100",
		    "Protocol" : "6",
		    "RuleAction" : "allow",
		    "Egress" : "true",
		    "CidrBlock" : {"Ref" : "publicSubnetCidr"},
		    "PortRange" : { "From" : "1024", "To" : "65535" }
		  },
		  "Metadata":{
		    "Comment" : "Allows outbound responses to public subnet"
		  }
		},

	  "privateSubnetAclAssociation" : {
			"Type" : "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties" : {
				"SubnetId" : { "Ref" : "privateSubnetId" },
				"NetworkAclId" : { "Ref" : "privateSubnetAcl" }
			}
		}
	},
	"Outputs" : {}
}
