{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "This nested stack will create the vpc resources for the project.",
	"Parameters" : {
		"tagCostCenter":{
      "Type": "String",
      "Description":"tag - cost center"
    },
    "tagEnvironment":{
      "Type": "String",
      "Description":"tag - environment",
      "AllowedValues" : ["sb", "test", "dev", "mergeddev", "qa", "prod"]
    },
    "tagGroup":{
      "Type": "String",
      "Description":"tag - group name"
    },
    "tagKeepAlive":{
      "Type": "String",
      "Description":"tag - keep alive tag",
      "AllowedValues" : ["true", "false"]
    },
    "tagOwner":{
      "Type": "String",
      "Description":"tag - product owner"
    },
    "tagProject":{
      "Type": "String",
      "Description":"tag - project name"
    },
    "tagStack":{
	    "Type": "String",
	    "Description":"tag - stack name"
	  },
		"bucketNameCfTemplates":{
			"Type":"String",
			"Description": "The name of the S3 bucket that holds the cloudformation templates used in nested stacks"
		},
		"bucketNameResources":{
    	"Type":"String",
    	"Description": "The name of the S3 bucket that holds resources (installation files, configuration files) needed for the environment."
    },
		"cidrPrivateSubnet":{
     	"Description" : "The CIDR block of the primary private subnet.",
   		"Type": "String"
  	},
		"cidrPublicSubnet":{
  		"Description" : "The CIDR block of the primary public subnet.",
   		"Type": "String"
  	},
		"cidrSshSource":{
			"Type":"String",
    	"Description": "ip cidr block to allow ssh access from"
		},
		"cidrVpc":{
			"Description" : "The CIDR block of the VPC",
			"Type" : "String"
  	},
		"doNotCreate" : {
	    "Description" : "If doNotCreateStack condition is present (\"Condition\" : \"doNotCreateStack\") in resource definition, then the resource is not created",
	    "Default" : "true",
	    "Type" : "String"
		}
  },

	"Conditions" : {
    "doNotCreateStack" : {"Fn::Equals" : [{"Ref" : "doNotCreate"}, "false"]}
  },

	"Resources" : {
		"baseNetworkSetup": {
			"Type":"AWS::CloudFormation::Stack",
			"Metadata": {
				"Comment":"Creates the network entities for the environment."
			},
			"Properties" :{
				"Parameters" :{
					"tagCostCenter": {"Ref" : "tagCostCenter"},
          "tagEnvironment": {"Ref" : "tagEnvironment"},
          "tagGroup": {"Ref" : "tagGroup"},
					"tagKeepAlive": {"Ref" : "tagKeepAlive"},
					"tagOwner": {"Ref" : "tagOwner"},
          "tagProject": {"Ref" : "tagProject"},
          "tagStack": {"Ref" : "tagStack"},
					"cidrVpc": {"Ref" : "cidrVpc"}
				},
				"TemplateURL" : {"Fn::Join":["",["https://s3.amazonaws.com/", {"Ref": "bucketNameCfTemplates"}, "/vpc/base-network.json"]]}
			}
		},

		"baseSecuritySetup": {
			"Type":"AWS::CloudFormation::Stack",
			"Metadata":{
				"Comment":"This stack provisions subnet partitions, route tables, and ACLs."
			},
			"Properties" :{
				"Parameters" :{
					"tagCostCenter": {"Ref" : "tagCostCenter"},
          "tagEnvironment": {"Ref" : "tagEnvironment"},
          "tagGroup": {"Ref" : "tagGroup"},
					"tagKeepAlive": {"Ref" : "tagKeepAlive"},
					"tagOwner": {"Ref" : "tagOwner"},
          "tagProject": {"Ref" : "tagProject"},
          "tagStack": {"Ref" : "tagStack"},
					"bucketNameCfTemplates": {"Ref": "bucketNameCfTemplates"},
					"cidrVpc": {"Ref" : "cidrVpc"},
					"cidrPrivateSubnet": {"Ref" : "cidrPrivateSubnet"},
					"cidrPublicSubnet": {"Ref" : "cidrPublicSubnet"},
					"cidrSshSource":{"Ref":"cidrSshSource"},
					"internetGatewayId": { "Fn::GetAtt" : [ "baseNetworkSetup", "Outputs.internetGatewayId" ] },
					"vpcId": { "Fn::GetAtt" : [ "baseNetworkSetup", "Outputs.vpcId" ] }
		    },
				"TemplateURL" : {"Fn::Join":["",["https://s3.amazonaws.com/", {"Ref": "bucketNameCfTemplates"}, "/vpc/base-security.json"]]}
			},
			"DependsOn" : "baseNetworkSetup"
		},

		"vpcEndPoints":{
			"Type":"AWS::CloudFormation::Stack",
			"Metadata":{
				"Comment": "Creates the vpc endpoints for eC2 to s3://$settings_environment-$settings_project-resources access.",
				"Commen2": "Allows for vpc endpoint utilization when making Amazon Linux package repository requests."
			},
			"Properties" :{
				"Parameters" :{
					"tagCostCenter": {"Ref" : "tagCostCenter"},
          "tagEnvironment": {"Ref" : "tagEnvironment"},
          "tagGroup": {"Ref" : "tagGroup"},
					"tagKeepAlive": {"Ref" : "tagKeepAlive"},
					"tagOwner": {"Ref" : "tagOwner"},
          "tagProject": {"Ref" : "tagProject"},
          "tagStack": {"Ref" : "tagStack"},
					"bucketNameResources": {"Ref" : "bucketNameResources"},
					"internalRouteTableId": { "Fn::GetAtt" : [ "baseSecuritySetup", "Outputs.internalRouteTableId" ] },
					"publicRouteTableId": { "Fn::GetAtt" : [ "baseSecuritySetup", "Outputs.publicRouteTableId" ] },
					"vpcId": { "Fn::GetAtt" : [ "baseNetworkSetup", "Outputs.vpcId" ] }
				},
				"TemplateURL" : {"Fn::Join":["",["https://s3.amazonaws.com/", {"Ref": "bucketNameCfTemplates"}, "/vpc/vpc-endpoints.json"]]}
			},
			"DependsOn" : "baseSecuritySetup"
		}
	},

	"Outputs" : {
		"privateSubnetId" : {
  		"Description" : "The ID of the first private subnet created.",
  		"Value" : { "Fn::GetAtt" : [ "baseSecuritySetup", "Outputs.privateSubnetId" ] },
			"Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-privateSubnetId" }}
  	},
		"publicSubnetId" : {
  		"Description" : "The ID of the public subnet created.",
			"Value" : { "Fn::GetAtt" : [ "baseSecuritySetup", "Outputs.publicSubnetId" ] },
			"Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-publicSubnetId" }}
    },
		"vpcId" : {
      "Description" : "The ID of the VPC created",
      "Value" : { "Fn::GetAtt" : [ "baseNetworkSetup", "Outputs.vpcId" ] }
    }
	}
}
