{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "Creates all required ACLs for the public subnet.",
	"Parameters" : {
		"tagStack":{
	    "Type": "String",
	    "Description":"tag - stack name"
	  },
		"tagProject":{
			"Type": "String",
			"Description":"tag - stack name"
		},
		"tagGroup":{
			"Type": "String",
			"Description":"tag - stack name"
		},
		"tagEnvironment":{
			"Type": "String",
			"Description":"environment tag"
		},
		"tagKeepAlive":{
			"Type": "String",
			"Description":"Tag - Keep Alive tag"
		},
		"tagOwner":{
			"Type": "String",
			"Description":"Tag - product owner"
		},
		"vpcId":{
	    "Type":"AWS::EC2::VPC::Id",
	    "Description":"The ID of the VPC the subnets shall be provisioned in."
	  },
	  "publicSubnetId":{
	  	"Type":"AWS::EC2::Subnet::Id",
	  	"Description":"The ID of the public subnet."
	  },
		"privateSubnetCIDR":{
	   	"Description" : "The CIDR block of the primary private subnet.",
	  	"Type": "String"
	  }
	},
	"Mappings":{},
	"Resources" : {
		"publicSubnetACL" : {
      "Type" : "AWS::EC2::NetworkAcl",
	    "Properties" : {
	    	"Tags" : [{
	      	"Key":"stack",
	      	"Value": {"Ref": "tagStack"}
	      	},{
	      	"Key":"Name",
	      	"Value":{"Fn::Join":["-",[{"Ref": "tagStack"},"publicSubnetACL"]]}
	        },{
					"Key":"project",
	      	"Value":{"Ref": "tagProject"}
					},{
					"Key":"group",
	        "Value":{"Ref": "tagGroup"}
					},{
					"Key":"environment",
					"Value":{"Ref": "tagEnvironment"}
					},{
					"Key":"keep-alive",
					"Value":{"Ref": "tagKeepAlive"}
					},{
					"Key":"owner",
					"Value":{"Ref": "tagOwner"}
					}
				],
	      "VpcId": {"Ref" : "vpcId"}
	  	},
	  	"Metadata":{
	    	"Comment":"ACL for the public subnet."
	    }
		},

		"publicSubnetAllowHttpInboundFromInternet" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "publicSubnetACL" },
				"RuleNumber" : "110",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : "0.0.0.0/0",
				"PortRange" : { "From" : "80", "To" : "80" }
			},
			"Metadata":{
				"Comment" : "Allow inbound http requests from the internet"
			}
		},

		"publicSubnetAllowHttpsInboundFromInternet" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "publicSubnetACL" },
				"RuleNumber" : "120",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : "0.0.0.0/0",
				"PortRange" : { "From" : "443", "To" : "443" }
			},
			"Metadata":{
				"Comment" : "allow inbound https requests from the internet"
			}
		},

		"publicSubnetAllowInboundResponsesFromInternet" : {
		  "Type" : "AWS::EC2::NetworkAclEntry",
		  "Properties" : {
		    "NetworkAclId" : { "Ref" : "publicSubnetACL" },
		    "RuleNumber" : "130",
		    "Protocol" : "6",
		    "RuleAction" : "allow",
		  	"Egress" : "false",
		    "CidrBlock" : "0.0.0.0/0",
		    "PortRange" : { "From" : "1024", "To" : "65535" }
		  },
		  "Metadata":{
		    "Comment" : "allow inbound responses to requests that have come from or passed through the subnet.  Includes private subnets."
		  }
		},

		"publicSubnetAllowSshInboundFromInternet" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "publicSubnetACL" },
				"RuleNumber" : "140",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : "0.0.0.0/0",
				"PortRange" : { "From" : "22", "To" : "22" }
			},
			"Metadata":{
				"Comment" : "TEMP:  need to split into individual rules for specific ip address access.  Allows for ssh access from anywhere."
			}
		},

		"publicSubnetAllowOutboundHttpToInternet" : {
		  "Type" : "AWS::EC2::NetworkAclEntry",
		  "Properties" : {
		    "NetworkAclId" : { "Ref" : "publicSubnetACL" },
		    "RuleNumber" : "110",
		    "Protocol" : "6",
		    "RuleAction" : "allow",
		    "Egress" : "true",
		    "CidrBlock" : "0.0.0.0/0",
		    "PortRange" : { "From" : "80", "To" : "80" }
		  },
		  "Metadata":{
		    "Comment" : "Allows outbound http traffic to internet"
		  }
		},

		"publicSubnetAllowOutboundHttpsToInternet" : {
		  "Type" : "AWS::EC2::NetworkAclEntry",
		  "Properties" : {
		    "NetworkAclId" : { "Ref" : "publicSubnetACL" },
		    "RuleNumber" : "120",
		    "Protocol" : "6",
		    "RuleAction" : "allow",
		    "Egress" : "true",
		    "CidrBlock" : "0.0.0.0/0",
		    "PortRange" : { "From" : "443", "To" : "443" }
		  },
		  "Metadata":{
		    "Comment" : "Allows outbound https traffic to the internet"
		  }
		},

		"publicSubnetAllowOutboundResponsesToPrivateSubnet" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "publicSubnetACL" },
				"RuleNumber" : "130",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "true",
				"CidrBlock" : {"Ref" : "privateSubnetCIDR"},
				"PortRange" : { "From" : "1024", "To" : "65535" }
			},
			"Metadata":{
				"Comment" : "Allows responses to private subnet requests"
			}
	  },

		"publicSubnetAllowOutboundResponsesToInternet" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "publicSubnetACL" },
				"RuleNumber" : "140",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "true",
				"CidrBlock" : "0.0.0.0/0",
				"PortRange" : { "From" : "1024", "To" : "65535" }
			},
			"Metadata":{
				"Comment" : "Allows outbound responses to requests coming from internal/internet"
			}
	  },

		"publicSubnetNetworkAclAssociation" : {
			"Type" : "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties" : {
				"SubnetId" : { "Ref" : "publicSubnetId" },
				"NetworkAclId" : { "Ref" : "publicSubnetACL" }
			}
		}
	},
	"Outputs" : {}
}
