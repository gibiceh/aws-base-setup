{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "Creates all route tables for the VPC and associates them with the appropriate subnets.",
	"Parameters" : {
		"stackNameTag":{
			"Type": "String",
			"Description":"tag - stack name"
	  },
		"projectTag":{
			"Type": "String",
			"Description":"Tag - Project name"
		},
		"groupTag":{
			"Type": "String",
			"Description":"Tag - Group name"
		},
		"environmentTag":{
			"Type": "String",
			"Description":"environment tag"
		},
		"keepAliveTag":{
			"Type": "String",
			"Description":"Tag - Keep Alive tag"
		},
		"ownerTag":{
			"Type": "String",
			"Description":"Tag - product owner"
		},
		"vpcCidr":{
	   	"Description" : "The CIDR block of the VPC.",
	  	"Type": "String"
	  },
		"vpcId":{
	    "Type":"AWS::EC2::VPC::Id",
	    "Description":"The ID of the VPC the subnets shall be provisioned in."
	  },
	  "publicSubnetId":{
	  	"Type":"AWS::EC2::Subnet::Id",
	    "Description":"The ID of the public subnet."
	  },
		"privateSubnetId":{
	  	"Type":"AWS::EC2::Subnet::Id",
	  	"Description":"The ID of the primary private subnet."
	  },
	  "gatewayId":{
	  	"Type":"String",
	  	"Description":"The ID of the Internet Gateway."
	  },
		"doNotCreate" : {
			"Description" : "If doNotCreateStack condition is present (\"Condition\" : \"doNotCreateStack\") in resource definition, then the resource is not created",
			"Default" : "true",
			"Type" : "String"
		}

	},
	"Mappings":{},
	"Conditions" : {
    "doNotCreateStack" : {"Fn::Equals" : [{"Ref" : "doNotCreate"}, "false"]}
  },
	"Resources" : {
		"publicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {"Ref" : "vpcId"},
				"Tags": [{
					"Key":"stack",
					"Value": {"Ref": "stackNameTag"}
					},{
	        "Key":"Name",
	        "Value":{"Fn::Join":["-",[{"Ref": "stackNameTag"},"publicRouteTable"]]}
	        },{
					"Key":"project",
	        "Value":{"Ref": "projectTag"}
					},{
					"Key":"group",
	        "Value":{"Ref": "groupTag"}
					},{
					"Key":"environment",
					"Value":{"Ref": "environmentTag"}
					},{
					"Key":"keep-alive",
					"Value":{"Ref": "keepAliveTag"}
					},{
					"Key":"owner",
					"Value":{"Ref": "ownerTag"}
					}
				]
			},
			"Metadata" :{
				"Comment" : "This is the route table to control the flow between the public Internet and the VPC."
			}
		},
		"publicInternetTrafficRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {"Ref" : "publicRouteTable"},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {"Ref" : "gatewayId"}
			},
			"Metadata" :{
				"Comment" : "route to internet from VPC"
			},
			"DependsOn":"publicRouteTable"
		},
		"publicRouteTableAssocToPublicSubnet": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {"Ref" : "publicSubnetId"},
				"RouteTableId": {"Ref" : "publicRouteTable"}
			},
			"DependsOn":["publicInternetTrafficRoute"]
		},

		"internalRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {"Ref" : "vpcId"},
				"Tags": [{
					"Key":"stack",
					"Value": {"Ref": "stackNameTag"}
					},{
	        "Key":"Name",
	        "Value":{"Fn::Join":["-",[{"Ref": "stackNameTag"},"internalRouteTable"]]}
	        },{
					"Key":"project",
	        "Value":{"Ref": "projectTag"}
					},{
					"Key":"group",
	        "Value":{"Ref": "groupTag"}
					},{
					"Key":"environment",
					"Value":{"Ref": "environmentTag"}
					},{
					"Key":"keep-alive",
					"Value":{"Ref": "keepAliveTag"}
					},{
					"Key":"owner",
					"Value":{"Ref": "ownerTag"}
					}
				]
			},
			"Metadata" :{
				"Comment" : "This route table controls the internal only traffic."
			}
		},

		"internalRouteTableAssocToPrivateSubnet": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {"Ref" : "privateSubnetId"},
				"RouteTableId": {"Ref" : "internalRouteTable"}
			},
			"DependsOn":"internalRouteTable"
		}
	},
	"Outputs" : {
		"internalRouteTableId":{
			"Description" : "The ID of the internal route table",
      "Value" : {"Ref" : "internalRouteTable"}
		},
		"publicRouteTableId":{
			"Description" : "The ID of the public route table",
      "Value" : {"Ref" : "publicRouteTable"}
		}
	}
}
