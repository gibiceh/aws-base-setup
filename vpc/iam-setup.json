{
   "AWSTemplateFormatVersion": "2010-09-09",
   "Description" : "This stack creates the needed IAM roles for EC2 to S3 access for the ec2 boxes",
   "Parameters" : {
     "tagStack":{
       "Type": "String",
       "Description":"tag - stack name"
       },
       "tagProject":{
         "Type": "String",
         "Description":"tag - project name"
       },
       "tagGroup":{
         "Type": "String",
         "Description":"tag - group name"
       },
       "tagCostCenter":{
         "Type": "String",
         "Description":"tag - cost center"
       },
       "tagEnvironment":{
         "Type": "String",
         "Description":"tag - environment"
       },
       "tagKeepAlive":{
         "Type": "String",
         "Description":"tag - keep alive tag"
       },
       "tagOwner":{
         "Type": "String",
         "Description":"tag - product owner"
       },
 			 "bucketNameResources":{
 	    	 "Type":"String",
 	    	 "Description": "The name of the S3 bucket that holds resource files for conductor"
 	     },
       "roleNameAppServer": {
         "Type": "String",
         "Description": "name of the iam role for the app server"
       },
       "iamRoleNameCrossStackLookup": {
         "Type": "String",
         "Description": "name of the iam role that enables references of resources in another cloudformation stack"
       },
       "iamRoleNameDbServer": {
 				"Type": "String",
 				"Description": "name of the iam role for the db server"
 			},
 			"iamRoleNameFileServer": {
 				"Type": "String",
 				"Description": "name of the iam role for the file server"
 			},
 			 "iamRoleNameRdGateway": {
         "Type": "String",
         "Description": "name of the iam role for the rd gateway"
       }
    },

    "Resources": {
      "appServerInstanceProfile": {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
          "Path": "/",
          "Roles": [ {
            "Ref": "appServerRole"
          } ]
        }
      },
      "appServerManagedPolicy":{
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
          "Description" : "access to app-server folder within s3://$ENV-pim-resources",
          "PolicyDocument" : {
            "Version" : "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:ListAllMyBuckets"
                ],
                "Resource": "arn:aws:s3:::*"
              },
              {
                "Effect": "Allow",
                "Action": [
                    "s3:ListBucket",
                    "s3:GetBucketLocation"
                ],
                "Resource": {"Fn::Join" : ["",["arn:aws:s3:::", {"Ref" : "bucketNameResources"}]]}
              },
              {
                "Effect": "Allow",
                "Action": [
                    "s3:ListBucket",
                    "s3:GetBucketLocation",
                    "s3:GetObject"
                ],
                "Resource": {"Fn::Join" : ["",["arn:aws:s3:::", {"Ref" : "bucketNameResources"}, "/app-server/*"]]}
              }
            ]
          }
        }
      },
      "appServerRole":{
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": {"Ref": "roleNameAppServer"},
          "AssumeRolePolicyDocument": {
            "Version" : "2012-10-17",
            "Statement": [ {
              "Effect": "Allow",
              "Principal": {
                "Service": [ "ec2.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ]
            }]
          },
          "ManagedPolicyArns": [ {"Ref": "appServerManagedPolicy"}],
          "Path": "/"
        },
        "DependsOn": ["appServerManagedPolicy"]
      },

      "crossStackLookupManagedPolicy":{
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
          "Description" : "allows for looking up resources defined in cross cloudformation stacks",
          "PolicyDocument" : {
            "Version": "2012-10-17",
            "Statement": [{
=======
     },
     "tagProject":{
       "Type": "String",
       "Description":"Tag - Project name"
     },
     "tagGroup":{
       "Type": "String",
       "Description":"Tag - Group name"
     },
     "tagEnvironment":{
       "Type": "String",
       "Description":"environment tag"
     },
     "tagKeepAlive":{
       "Type": "String",
       "Description":"Tag - Keep Alive tag"
     },
     "tagOwner":{
       "Type": "String",
       "Description":"Tag - product owner"
     },
 		 "bucketNameResources":{
 	  	 "Type":"String",
 	  	 "Description": "The name of the S3 bucket that holds resource files for conductor"
 	   },
     "lambdaCustomResourceGeneratorArn":{
       "Type": "String",
       "Description": "reference to the lambda function arn (create custom Cloudformation resources) generated in the Preliminaries stack "
     },
     "iamRoleFlamenco": {
       "Type": "String",
       "Description": "name of the iam role assigned to the flamenco ec2 instances"
     },
     "iamRoleWebServer": {
       "Type": "String",
       "Description": "name of the iam role assigned to the web server ec2 instances"
     }
   },

   "Resources": {
     "customIamRoleFlamenco": {
       "Type": "Custom::createIAMRole",
       "Properties": {
         "ServiceToken": {"Ref": "lambdaCustomResourceGeneratorArn"},
         "roleName": {"Ref": "iamRoleFlamenco"}
       },
 	    "Metadata":{
 		  	"Comment" : "This custom resource is not to be updated, only replaced.  Enforced via stack policy"
 		  }
     },

     "customIamRoleWebServer": {
       "Type": "Custom::createIAMRole",
       "Properties": {
         "ServiceToken": {"Ref": "lambdaCustomResourceGeneratorArn"},
         "roleName": {"Ref": "iamRoleWebServer"}
       },
 	    "Metadata":{
 		  	"Comment" : "This custom resource is not to be updated, only replaced.  Enforced via stack policy"
 		  }
     },

     "iamPolicyBasePublicEc2": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "Description" : "Base IAM Policy for Public EC2: 1)allow access to S3 resources, 2)associate eip address",
        "PolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListAllMyBuckets"
              ],
              "Resource": "arn:aws:s3:::*"
            },
            {
              "Effect": "Allow",
              "Action": [
                  "s3:ListBucket",
                  "s3:GetBucketLocation",
                  "s3:GetObject"
              ],
              "Resource": {"Fn::Join" : ["",["arn:aws:s3:::", {"Ref" : "bucketNameResources"}, "/*"]]}
            },
            {
>>>>>>> 9b7d460039404db119ef7086991afccd58f2ce73
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
<<<<<<< HEAD
                "logs:PutLogEvents"
              ],
              "Resource": "arn:aws:logs:*:*:*"
=======
                "logs:PutLogEvents",
                "logs:DescribeLogStreams"
              ],
              "Resource": [
                "arn:aws:logs:*:*:*"
              ]
>>>>>>> 9b7d460039404db119ef7086991afccd58f2ce73
            },
            {
              "Effect": "Allow",
              "Action": [
<<<<<<< HEAD
                "cloudformation:DescribeStacks"
              ],
              "Resource": "*"
            }]
          }
        }
      },
      "crossStackLookupRole":{
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": {"Ref": "iamRoleNameCrossStackLookup"},
          "AssumeRolePolicyDocument": {
            "Version" : "2012-10-17",
            "Statement": [ {
              "Effect": "Allow",
              "Principal": {
                "Service": [ "lambda.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ]
            }]
          },
          "ManagedPolicyArns": [ {"Ref": "crossStackLookupManagedPolicy"}],
          "Path": "/"
        },
        "DependsOn": ["crossStackLookupManagedPolicy"]
      },

      "dbServerInstanceProfile": {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
          "Path": "/",
          "Roles": [ {
            "Ref": "dbServerRole"
          } ]
        }
      },
      "dbServerManagedPolicy":{
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
          "Description" : "access to db-server folder within s3://$ENV-pim-resources",
          "PolicyDocument" : {
            "Version" : "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:ListAllMyBuckets"
                ],
                "Resource": "arn:aws:s3:::*"
              },
              {
                "Effect": "Allow",
                "Action": [
                    "s3:ListBucket",
                    "s3:GetBucketLocation"
                ],
                "Resource": {"Fn::Join" : ["",["arn:aws:s3:::", {"Ref" : "bucketNameResources"}]]}
              },
              {
                "Effect": "Allow",
                "Action": [
                    "s3:ListBucket",
                    "s3:GetBucketLocation",
                    "s3:GetObject"
                ],
                "Resource": {"Fn::Join" : ["",["arn:aws:s3:::", {"Ref" : "bucketNameResources"}, "/db-server/*"]]}
              }
            ]
          }
        }
      },
      "dbServerRole":{
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": {"Ref": "iamRoleNameDbServer"},
          "AssumeRolePolicyDocument": {
            "Version" : "2012-10-17",
            "Statement": [ {
              "Effect": "Allow",
              "Principal": {
                "Service": [ "ec2.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ]
            }]
          },
          "ManagedPolicyArns": [ {"Ref": "dbServerManagedPolicy"}],
          "Path": "/"
        },
        "DependsOn": ["dbServerManagedPolicy"]
      },

      "fileServerInstanceProfile": {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
          "Path": "/",
          "Roles": [ {
            "Ref": "fileServerRole"
          } ]
        }
      },
      "fileServerManagedPolicy":{
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
          "Description" : "access to file-server folder within s3://$ENV-pim-resources",
          "PolicyDocument" : {
            "Version" : "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:ListAllMyBuckets"
                ],
                "Resource": "arn:aws:s3:::*"
              },
              {
                "Effect": "Allow",
                "Action": [
                    "s3:ListBucket",
                    "s3:GetBucketLocation"
                ],
                "Resource": {"Fn::Join" : ["",["arn:aws:s3:::", {"Ref" : "bucketNameResources"}]]}
              },
              {
                "Effect": "Allow",
                "Action": [
                    "s3:ListBucket",
                    "s3:GetBucketLocation",
                    "s3:GetObject"
                ],
                "Resource": {"Fn::Join" : ["",["arn:aws:s3:::", {"Ref" : "bucketNameResources"}, "/file-server/*"]]}
              }
            ]
          }
        }
      },
      "fileServerRole":{
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": {"Ref": "iamRoleNameFileServer"},
          "AssumeRolePolicyDocument": {
            "Version" : "2012-10-17",
            "Statement": [ {
              "Effect": "Allow",
              "Principal": {
                "Service": [ "ec2.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ]
            }]
          },
          "ManagedPolicyArns": [ {"Ref": "fileServerManagedPolicy"}],
          "Path": "/"
        },
        "DependsOn": ["fileServerManagedPolicy"]
      },

      "rdGatewayInstanceProfile": {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
          "Path": "/",
          "Roles": [ {
            "Ref": "rdGatewayRole"
          } ]
        }
      },
      "rdGatewayManagedPolicy":{
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
          "Description" : "access to rd-gateway folder within s3://$ENV-pim-resources",
          "PolicyDocument" : {
            "Version" : "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:ListAllMyBuckets"
                ],
                "Resource": "arn:aws:s3:::*"
              },
              {
                "Effect": "Allow",
                "Action": [
                    "s3:ListBucket",
                    "s3:GetBucketLocation"
                ],
                "Resource": {"Fn::Join" : ["",["arn:aws:s3:::", {"Ref" : "bucketNameResources"}]]}
              },
              {
                "Effect": "Allow",
                "Action": [
                    "s3:ListBucket",
                    "s3:GetBucketLocation",
                    "s3:GetObject"
                ],
                "Resource": {"Fn::Join" : ["",["arn:aws:s3:::", {"Ref" : "bucketNameResources"}, "/rd-gateway/*"]]}
              }
            ]
          }
        }
      },
      "rdGatewayRole":{
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": {"Ref": "iamRoleNameRdGateway"},
          "AssumeRolePolicyDocument": {
            "Version" : "2012-10-17",
            "Statement": [ {
              "Effect": "Allow",
              "Principal": {
                "Service": [ "ec2.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ]
            }]
          },
          "ManagedPolicyArns": [ {"Ref": "rdGatewayManagedPolicy"}],
          "Path": "/"
        },
        "DependsOn": ["rdGatewayManagedPolicy"]
      }
    },

    "Outputs" : {
      "appServerInstanceProfileName":{
  		  "Description" : "The name of the app server Instance Profile",
        "Value" : {"Ref" : "appServerInstanceProfile"}
  	  },
      "dbServerInstanceProfileName":{
  		  "Description" : "The name of the db server Instance Profile",
        "Value" : {"Ref" : "dbServerInstanceProfile"}
  	  },
      "fileServerInstanceProfileName":{
  		  "Description" : "The name of the file server Instance Profile",
        "Value" : {"Ref" : "fileServerInstanceProfile"}
  	  },
      "iamRoleArnCrossStackLookup":{
  		  "Description" : "The name of the Jenkins Instance Profile",
        "Value" : {"Fn::GetAtt" : ["crossStackLookupRole", "Arn"] }
  	  },
  	  "rdGatewayInstanceProfileName":{
  		  "Description" : "The name of the rd Gateway Instance Profile",
        "Value" : {"Ref" : "rdGatewayInstanceProfile"}
  	  }
    }
=======
                "ec2:AssociateAddress"
              ],
              "Resource": "*"
            }

          ]
        },
        "Roles" : [
          {"Ref": "iamRoleFlamenco"},
          {"Ref": "iamRoleWebServer"}
        ]
      },
      "DependsOn": ["customIamRoleFlamenco", "customIamRoleWebServer"]
    },

    "flamencoEc2InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ {
          "Ref": "iamRoleFlamenco"
        } ]
      },
      "DependsOn": ["customIamRoleFlamenco"]
    },

    "webServerEc2InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ {
          "Ref": "iamRoleWebServer"
        } ]
      },
      "DependsOn": ["customIamRoleWebServer"]
    }
  },

  "Outputs" : {
    "flamencoEc2InstanceProfileName":{
  		"Description" : "The name of the flamenco Instance Profile",
      "Value" : {"Ref" : "flamencoEc2InstanceProfile"}
  	},
    "webServerEc2InstanceProfileName":{
  		"Description" : "The name of the web server Instance Profile",
      "Value" : {"Ref" : "webServerEc2InstanceProfile"}
  	}
  }
>>>>>>> 9b7d460039404db119ef7086991afccd58f2ce73
}
