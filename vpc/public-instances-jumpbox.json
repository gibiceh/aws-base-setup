{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Create autoscaling EC2 group to host jumpbox",

  "Parameters" : {
    "tagStack":{
	    "Type": "String",
	    "Description":"tag - stack name"
	  },
	  "tagProject":{
	    "Type": "String",
	    "Description":"tag - project name"
	  },
	  "tagGroup":{
	    "Type": "String",
	    "Description":"tag - group name"
	  },
	  "tagCostCenter":{
	    "Type": "String",
	    "Description":"tag - cost center"
	  },
		"tagEnvironment":{
	    "Type": "String",
	    "Description":"tag - environment"
	  },
	  "tagKeepAlive":{
	    "Type": "String",
	    "Description":"tag - keep alive tag"
	  },
	  "tagOwner":{
	    "Type": "String",
	    "Description":"tag - product owner"
	  },
    "instanceTypeJumpBox":{
      "Description" : "ec2 instance type for the jumpbox asg",
      "Type" : "String"
    },
    "ec2KeyPair" : {
      "Description" : "The EC2 Key Pair for the instances",
      "Type" : "String",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },
    "snsEc2Topic":{
      "Type": "String",
      "Description":"arn for the sns topic for asg notifications."
    },
    "publicSubnetId":{
      "Description" : "The ID of the public subnet.",
      "Type": "String"
    },
    "jumpBoxSecurityGroup":{
      "Description" : "Security Group for jumpbox in public subnet",
      "Type":"AWS::EC2::SecurityGroup::Id"
    },
    "jumpBoxInstanceProfile":{
      "Type": "String",
      "Description":"instance profile."
    },
    "eipAllocationIdRdGateway":{
      "Type": "String",
      "Description": "EIP allocation ID for JumpBox"
    },
    "bucketNameResources" : {
      "Description" : "The name of the bucket that contains your packaged source",
      "Type" : "String"
    },
    "architecture" : {
      "Description" : "AWSInstanceType2Arch mapping result",
      "Type" : "String"
    },
    "latestAmiFunctionArn" : {
      "Description" : "The arn for the lambda function that looks up the latest Amazon Linux AMI",
      "Type" : "String"
    },
    "doNotCreate" : {
      "Description" : "If doNotCreateStack condition is present (\"Condition\" : \"doNotCreateStack\") in resource definition, then the resource is not created",
      "Default" : "true",
      "Type" : "String"
    }
  },

  "Conditions" : {
    "doNotCreateStack" : {"Fn::Equals" : [{"Ref" : "doNotCreate"}, "false"]}
  },

  "Resources" : {
    "latestAmiInfo": {
      "Type": "Custom::LatestAMIInfo",
      "Properties": {
        "ServiceToken": { "Ref" : "latestAmiFunctionArn" },
        "Region": { "Ref": "AWS::Region" },
        "Architecture": { "Ref": "architecture" }
      }
    },

    "jumpBoxAutoScalingGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
      	"LaunchConfigurationName" : { "Ref" : "jumpBoxLaunchConfig" },
      	"MinSize" : "1",
      	"MaxSize" : "1",
      	"VPCZoneIdentifier": [{"Ref": "publicSubnetId"}],
          "NotificationConfigurations" : [
            {
              "TopicARN" : {"Ref": "snsEc2Topic"},
              "NotificationTypes" : [
                "autoscaling:EC2_INSTANCE_LAUNCH",
                "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
                "autoscaling:EC2_INSTANCE_TERMINATE",
                "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
              ]
            }
          ],
      	"Tags": [{
      		"Key":"stack",
      		"Value": {"Ref": "tagStack"},
      		"PropagateAtLaunch" : "true"
      	  },{
      		"Key":"Name",
      		"Value":{"Fn::Join":["-",[{"Ref": "tagStack"},"jumpBoxAutoScalingGroup"]]},
      		"PropagateAtLaunch" : "true"
      	   },{
      		"Key":"project",
      		"Value":{"Ref": "tagProject"},
      		"PropagateAtLaunch" : "true"
      	   },{
      		"Key":"group",
      		"Value":{"Ref": "tagGroup"},
      		"PropagateAtLaunch" : "true"
      	   },{
      		"Key":"cost-center",
      		"Value":{"Ref": "tagCostCenter"},
      		"PropagateAtLaunch" : "true"
      	   },{
      		"Key":"environment",
      		"Value":{"Ref": "tagEnvironment"},
      		"PropagateAtLaunch" : "true"
      	   },{
      		"Key":"keep-alive",
      		"Value":{"Ref": "tagKeepAlive"},
      		"PropagateAtLaunch" : "true"
      	   },{
      		"Key":"owner",
      		"Value":{"Ref": "tagOwner"},
      		"PropagateAtLaunch" : "true"
      	   }
        ]
      }
    },

    "jumpBoxLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Metadata" : {
        "Comment" : "Provision a jumpbox.  Associate JumpBox EIP Allocation ID with the instance on boot.  Install Denyhosts.",
        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "Install" : [ "Install" ]
          },
          "Install" : {
            "packages" : {
              "yum" : {
                "aws-cli"      : []
              }
            }
          }
        }
      },
      "Properties" : {
        "AssociatePublicIpAddress" : "true",
    	  "ec2KeyPair" : { "Ref" : "ec2KeyPair" },
    	  "ImageId": { "Fn::GetAtt": [ "latestAmiInfo", "Id" ] },
        "IamInstanceProfile" : {"Ref":"jumpBoxInstanceProfile"},
    	  "SecurityGroups" : [ { "Ref" : "jumpBoxSecurityGroup" } ],
    	  "InstanceType" : { "Ref" : "instanceTypeJumpBox" },
    	  "UserData": {
    	    "Fn::Base64": {
      		  "Fn::Join": [
      		    "",
      		    [
                "#!/bin/bash\n",
                "yum update -y\n",
                "yum install jq -y\n",
                "mkdir -p /opt/conductor/ssh\n",
                "LOCATION_REGION=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document/ | jq -r .region)\n",
                "S3_BUCKET=", { "Ref" : "bucketNameResources" }, "\n",
                "eipAllocationIdRdGateway=", { "Ref" : "eipAllocationIdRdGateway" }, "\n",
                "aws s3 --region $LOCATION_REGION cp s3://$S3_BUCKET/jumpbox/bootstrap-jumpbox.sh /opt/conductor\n",
                "bash /opt/conductor/bootstrap-jumpbox.sh $eipAllocationIdRdGateway $S3_BUCKET\n"
      		    ]
      		  ]
    	    }
    	  }
      }
    }
   },
   "Outputs" : {
     "amiId" : {
      "Description": "The Amazon EC2 instance AMI ID.",
      "Value" : { "Fn::GetAtt": [ "latestAmiInfo", "Id" ] }
    }
   }
}
