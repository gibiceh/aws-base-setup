{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "Creates all route tables for the Conductor infrastructure and associates them with the appropriate subnets.",
	"Parameters" : {
		"tagStack":{
			"Type": "String",
			"Description":"tag - stack name"
	  },
		"tagProject":{
			"Type": "String",
			"Description":"tag - project name"
		},
		"tagGroup":{
			"Type": "String",
			"Description":"tag - group name"
		},
		"tagCostCenter":{
			"Type": "String",
			"Description":"tag - cost center"
		},
		"tagEnvironment":{
			"Type": "String",
			"Description":"tag - environment"
		},
		"tagKeepAlive":{
			"Type": "String",
			"Description":"tag - keep alive tag"
		},
		"tagOwner":{
			"Type": "String",
			"Description":"tag - product owner"
		},
		"vpcCidr":{
	   	"Description" : "The CIDR block of the VPC.",
	  	"Type": "String"
	  },
		"vpcId":{
	    "Type":"AWS::EC2::VPC::Id",
	    "Description":"The ID of the VPC the subnets shall be provisioned in."
	  },
	  "publicSubnetId":{
	  	"Type":"AWS::EC2::Subnet::Id",
	    "Description":"The ID of the public subnet."
	  },
		"privateSubnetId":{
	  	"Type":"AWS::EC2::Subnet::Id",
	  	"Description":"The ID of the private subnet."
	  },
	  "internetGatewayId":{
	  	"Type":"String",
	  	"Description":"The ID of the Internet Gateway."
	  },
		"natGatewayId":{
	  	"Type":"String",
	  	"Description":"The ID of the Managed NAT Gateway."
	  },
		"doNotCreate" : {
			"Description" : "If doNotCreateStack condition is present (\"Condition\" : \"doNotCreateStack\") in resource definition, then the resource is not created",
			"Default" : "true",
			"Type" : "String"
		}

	},
	"Mappings":{},
	"Conditions" : {
    "doNotCreateStack" : {"Fn::Equals" : [{"Ref" : "doNotCreate"}, "false"]}
  },
	"Resources" : {
		"publicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {"Ref" : "vpcId"},
				"Tags": [{
					"Key":"stack",
					"Value": {"Ref": "tagStack"}
					},{
	        "Key":"Name",
	        "Value":{"Fn::Join":["-",[{"Ref": "tagStack"},"publicRouteTable"]]}
	        },{
					"Key":"project",
	        "Value":{"Ref": "tagProject"}
					},{
					"Key":"group",
	        "Value":{"Ref": "tagGroup"}
					},{
					"Key":"cost-center",
	      	"Value":{"Ref": "tagCostCenter"}
					},{
					"Key":"environment",
					"Value":{"Ref": "tagEnvironment"}
					},{
					"Key":"keep-alive",
					"Value":{"Ref": "tagKeepAlive"}
					},{
					"Key":"owner",
					"Value":{"Ref": "tagOwner"}
					}
				]
			},
			"Metadata" :{
				"Comment" : "This is the route table to control the flow between the public Internet and the VPC."
			}
		},
		"publicInternetTrafficRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {"Ref" : "publicRouteTable"},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {"Ref" : "internetGatewayId"}
			},
			"Metadata" :{
				"Comment" : "route to internet from VPC"
			},
			"DependsOn":"publicRouteTable"
		},
		"publicRouteTableAssocToPublicSubnet": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {"Ref" : "publicSubnetId"},
				"RouteTableId": {"Ref" : "publicRouteTable"}
			},
			"DependsOn":["publicInternetTrafficRoute"]
		},

		"internalRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {"Ref" : "vpcId"},
				"Tags": [{
					"Key":"stack",
					"Value": {"Ref": "tagStack"}
					},{
	        "Key":"Name",
	        "Value":{"Fn::Join":["-",[{"Ref": "tagStack"},"internalRouteTable"]]}
	        },{
					"Key":"project",
	        "Value":{"Ref": "tagProject"}
					},{
					"Key":"group",
	        "Value":{"Ref": "tagGroup"}
					},{
					"Key":"cost-center",
	        "Value":{"Ref": "tagCostCenter"}
					},{
					"Key":"environment",
					"Value":{"Ref": "tagEnvironment"}
					},{
					"Key":"keep-alive",
					"Value":{"Ref": "tagKeepAlive"}
					},{
					"Key":"owner",
					"Value":{"Ref": "tagOwner"}
					}
				]
			},
			"Metadata" :{
				"Comment" : "This route table controls the internal only traffic."
			}
		},

		"privateSubnetInternetTrafficRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {"Ref" : "internalRouteTable"},
				"DestinationCidrBlock": "0.0.0.0/0",
				"NatGatewayId": {"Ref" : "natGatewayId"}
			},
			"Metadata" :{
				"Comment" : "route to internet from private subnet through NAT gateway"
			},
			"DependsOn":"internalRouteTable"
		},

		"internalRouteTableAssocToPrivateSubnet": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {"Ref" : "privateSubnetId"},
				"RouteTableId": {"Ref" : "internalRouteTable"}
			},
			"DependsOn":"internalRouteTable"
		}
	},
	"Outputs" : {
		"internalRouteTableId":{
			"Description" : "The ID of the internal route table",
      "Value" : {"Ref" : "internalRouteTable"}
		},
		"publicRouteTableId":{
			"Description" : "The ID of the public route table",
      "Value" : {"Ref" : "publicRouteTable"}
		}
	}
}
