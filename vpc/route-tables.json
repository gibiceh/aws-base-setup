{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "Provision all route tables for the system and associates them with the appropriate subnets.",
	"Parameters" : {
		"tagCostCenter":{
      "Type": "String",
      "Description":"tag - cost center"
    },
    "tagEnvironment":{
      "Type": "String",
      "Description":"tag - environment",
      "AllowedValues" : ["sb", "test", "dev", "mergeddev", "qa", "prod"]
    },
    "tagGroup":{
      "Type": "String",
      "Description":"tag - group name"
    },
    "tagKeepAlive":{
      "Type": "String",
      "Description":"tag - keep alive tag",
      "AllowedValues" : ["true", "false"]
    },
    "tagOwner":{
      "Type": "String",
      "Description":"tag - product owner"
    },
    "tagProject":{
      "Type": "String",
      "Description":"tag - project name"
    },
    "tagStack":{
	    "Type": "String",
	    "Description":"tag - stack name"
	  },
		"cidrVpc":{
	   	"Description" : "The CIDR block of the VPC.",
	  	"Type": "String"
	  },
		"internetGatewayId":{
	  	"Type":"String",
	  	"Description":"The ID of the Internet Gateway."
	  },
		"privateSubnetId":{
	  	"Type":"AWS::EC2::Subnet::Id",
	  	"Description":"The ID of the private subnet."
	  },
	  "publicSubnetId":{
	  	"Type":"AWS::EC2::Subnet::Id",
	    "Description":"The ID of the public subnet."
	  },
		"vpcId":{
	    "Type":"AWS::EC2::VPC::Id",
	    "Description":"The ID of the VPC the subnets shall be provisioned in."
	  },
		"doNotCreate" : {
			"Description" : "If doNotCreateStack condition is present (\"Condition\" : \"doNotCreateStack\") in resource definition, then the resource is not created",
			"Default" : "true",
			"Type" : "String"
		}

	},
	"Mappings":{},

	"Conditions" : {
    "doNotCreateStack" : {"Fn::Equals" : [{"Ref" : "doNotCreate"}, "false"]}
  },

	"Resources" : {
		"publicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Metadata" :{
				"Comment" : "Provision route table to control the flow between the public Internet and the VPC."
			},
			"Properties": {
				"VpcId": {"Ref" : "vpcId"},
				"Tags": [
					{
            "Key":"mon:cost-center",
            "Value":{"Ref": "tagCostCenter"}
          },
          {
            "Key":"mon:environment",
            "Value":{"Ref": "tagEnvironment"}
	        },
          {
            "Key":"mon:group",
            "Value":{"Ref": "tagGroup"}
          },
          {
		        "Key":"mon:keep-alive",
		        "Value":{"Ref": "tagKeepAlive"}
		      },
					{
		      	"Key":"Name",
		      	"Value":{"Fn::Join":["-",[{"Ref": "tagStack"},"publicRouteTable"]]}
	        },
          {
		        "Key":"mon:owner",
		        "Value":{"Ref": "tagOwner"}
		      },
          {
            "Key":"mon:project",
            "Value":{"Ref": "tagProject"}
          },
          {
            "Key":"stack",
            "Value": {"Ref": "tagStack"}
          }
				]
			}
		},
		"publicRouteInternetTraffic": {
			"Type": "AWS::EC2::Route",
			"Metadata" :{
				"Comment" : "Provision route to internet from VPC"
			},
			"Properties": {
				"RouteTableId": {"Ref" : "publicRouteTable"},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {"Ref" : "internetGatewayId"}
			},
			"DependsOn":"publicRouteTable"
		},
		"publicRouteTableAssocToPublicSubnet": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {"Ref" : "publicSubnetId"},
				"RouteTableId": {"Ref" : "publicRouteTable"}
			},
			"DependsOn":["publicRouteInternetTraffic"]
		},

		"internalRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Metadata" :{
				"Comment" : "Provision the route table to controls internal only traffic."
			},
			"Properties": {
				"VpcId": {"Ref" : "vpcId"},
				"Tags": [
					{
            "Key":"mon:cost-center",
            "Value":{"Ref": "tagCostCenter"}
          },
          {
            "Key":"mon:environment",
            "Value":{"Ref": "tagEnvironment"}
	        },
          {
            "Key":"mon:group",
            "Value":{"Ref": "tagGroup"}
          },
          {
		        "Key":"mon:keep-alive",
		        "Value":{"Ref": "tagKeepAlive"}
		      },
					{
		      	"Key":"Name",
		      	"Value":{"Fn::Join":["-",[{"Ref": "tagStack"},"internalRouteTable"]]}
	        },
          {
		        "Key":"mon:owner",
		        "Value":{"Ref": "tagOwner"}
		      },
          {
            "Key":"mon:project",
            "Value":{"Ref": "tagProject"}
          },
          {
            "Key":"stack",
            "Value": {"Ref": "tagStack"}
          }
				]
			}
		},
		"internalRouteTableAssocToPrivateSubnet": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {"Ref" : "privateSubnetId"},
				"RouteTableId": {"Ref" : "internalRouteTable"}
			},
			"DependsOn":"internalRouteTable"
		}
	},

	"Outputs" : {
		"internalRouteTableId":{
			"Description" : "The ID of the internal route table",
      "Value" : {"Ref" : "internalRouteTable"}
		},
		"publicRouteTableId":{
			"Description" : "The ID of the public route table",
      "Value" : {"Ref" : "publicRouteTable"}
		}
	}
}
